@page "/"
@inject HttpClient Http
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

<PageTitle>Index</PageTitle>

<h1>Discover Country Information!</h1>

Welcome to your new country information app.

<div class="input-group mb-3">
    <div class="form-group mx-sm-3 mb-2">
        <input class="form-control" size="30" id="search-name" placeholder="Search Country..." @oninput="OnSearchTextChange" />
    </div>
</div>
@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="scroll">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th class="sort-th" @onclick="@(() => SortTable("name"))">Name<span class="fa @(SetSortIcon("name"))"></span></th>
                    <th class="sort-th" @onclick="@(() => SortTable("region"))">Region<span class="fa @(SetSortIcon("region"))"></span></th>
                    <th class="sort-th" @onclick="@(() => SortTable("language"))">Language<span class="fa @(SetSortIcon("language"))"></span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var country in filteredCountries.data)
                {
                    <tr>
                        <td>@country.name</td>
                        <td>@country.region</td>
                        <td>@country.languages</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private Root countries;
    private Root filteredCountries;
    private bool isSortedAscending;
    private string activeSortColumn;

    protected override async Task OnInitializedAsync()
    {
        //retrieving the top 100 cryptos from the api to display in the table
        countries = await Http.GetFromJsonAsync<Root>("https://restcountries.com/v3.1/all");
        //creating a duplicate of the cryptos for filtering
        filteredCountries = countries;
        Console.WriteLine(countries.data);
    }

    public class Ara
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Aym
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Bre
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class CapitalInfo
    {
        public List<double> latlng { get; set; }
    }

    public class Car
    {
        public List<string> signs { get; set; }
        public string side { get; set; }
    }

    public class Ces
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class CoatOfArms
    {
        public string png { get; set; }
        public string svg { get; set; }
    }

    public class Currencies
    {
        public PEN PEN { get; set; }
    }

    public class Cym
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Demonyms
    {
        public Eng eng { get; set; }
        public Fra fra { get; set; }
    }

    public class Deu
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Eng
    {
        public string f { get; set; }
        public string m { get; set; }
    }

    public class Est
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Fin
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Flags
    {
        public string png { get; set; }
        public string svg { get; set; }
    }

    public class Fra
    {
        public string official { get; set; }
        public string common { get; set; }
        public string f { get; set; }
        public string m { get; set; }
    }

    public class Gini
    {
        public double _2019 { get; set; }
    }

    public class Hrv
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Hun
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Idd
    {
        public string root { get; set; }
        public List<string> suffixes { get; set; }
    }

    public class Ita
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Jpn
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Kor
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Languages
    {
        public string aym { get; set; }
        public string que { get; set; }
        public string spa { get; set; }
    }

    public class Maps
    {
        public string googleMaps { get; set; }
        public string openStreetMaps { get; set; }
    }

    public class Name
    {
        public string common { get; set; }
        public string official { get; set; }
        public NativeName nativeName { get; set; }
    }

    public class NativeName
    {
        public Aym aym { get; set; }
        public Que que { get; set; }
        public Spa spa { get; set; }
    }

    public class Nld
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class PEN
    {
        public string name { get; set; }
        public string symbol { get; set; }
    }

    public class Per
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Pol
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Por
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class PostalCode
    {
        public string format { get; set; }
        public string regex { get; set; }
    }

    public class Que
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Datum
    {
        public Name name { get; set; }
        public List<string> tld { get; set; }
        public string cca2 { get; set; }
        public string ccn3 { get; set; }
        public string cca3 { get; set; }
        public string cioc { get; set; }
        public bool independent { get; set; }
        public string status { get; set; }
        public bool unMember { get; set; }
        public Currencies currencies { get; set; }
        public Idd idd { get; set; }
        public List<string> capital { get; set; }
        public List<string> altSpellings { get; set; }
        public string region { get; set; }
        public string subregion { get; set; }
        public Languages languages { get; set; }
        public Translations translations { get; set; }
        public List<int> latlng { get; set; }
        public bool landlocked { get; set; }
        public List<string> borders { get; set; }
        public int area { get; set; }
        public Demonyms demonyms { get; set; }
        public string flag { get; set; }
        public Maps maps { get; set; }
        public int population { get; set; }
        public Gini gini { get; set; }
        public string fifa { get; set; }
        public Car car { get; set; }
        public List<string> timezones { get; set; }
        public List<string> continents { get; set; }
        public Flags flags { get; set; }
        public CoatOfArms coatOfArms { get; set; }
        public string startOfWeek { get; set; }
        public CapitalInfo capitalInfo { get; set; }
        public PostalCode postalCode { get; set; }
    }

    public class Root
    {
        public List<Datum> data { get; set; }
    }

    public class Rus
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Slk
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Spa
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Swe
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Translations
    {
        public Ara ara { get; set; }
        public Bre bre { get; set; }
        public Ces ces { get; set; }
        public Cym cym { get; set; }
        public Deu deu { get; set; }
        public Est est { get; set; }
        public Fin fin { get; set; }
        public Fra fra { get; set; }
        public Hrv hrv { get; set; }
        public Hun hun { get; set; }
        public Ita ita { get; set; }
        public Jpn jpn { get; set; }
        public Kor kor { get; set; }
        public Nld nld { get; set; }
        public Per per { get; set; }
        public Pol pol { get; set; }
        public Por por { get; set; }
        public Rus rus { get; set; }
        public Slk slk { get; set; }
        public Spa spa { get; set; }
        public Swe swe { get; set; }
        public Tur tur { get; set; }
        public Urd urd { get; set; }
        public Zho zho { get; set; }
    }

    public class Tur
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Urd
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    public class Zho
    {
        public string official { get; set; }
        public string common { get; set; }
    }

    //taking the input from the search field and filtering through the list to find the cryptos that contain the search, sending a get request again to reset cryptos.
    private async void OnSearchTextChange(ChangeEventArgs changeEventArgs)
    {
        string searchText = changeEventArgs.Value.ToString();

        countries = await Http.GetFromJsonAsync<Root>("https://restcountries.com/v3.1/all");
    }

    private void SortTable(string columnName)
    {
        if (columnName != activeSortColumn)
        {
            //ordering the filtered cryptos by ascending order if clicked on for the first time
            filteredCountries.data = filteredCountries.data.OrderBy(country => country.GetType().GetProperty(columnName).GetValue(country, null)).ToList();
            isSortedAscending = true;
            activeSortColumn = columnName;
        }
        else
        {
            if (isSortedAscending)
            {
                filteredCountries.data = filteredCountries.data.OrderByDescending(country => country.GetType().GetProperty(columnName).GetValue(country, null)).ToList();
            }
            else
            {
                filteredCountries.data = filteredCountries.data.OrderBy(country => country.GetType().GetProperty(columnName).GetValue(country, null)).ToList();
            }
            isSortedAscending = !isSortedAscending;
        }
    }

    //Setting an icon in the column header
    private string SetSortIcon(string columnName)
    {
        if (activeSortColumn != columnName)
        {
            return string.Empty;
        }
        if (isSortedAscending)
        {
            return "fa-sort-up";
        }
        else
        {
            return "fa-sort-down";
        }
    }
}